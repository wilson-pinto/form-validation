var inValidMessege = "", formIsValid = !0, fieldIsValid = !0; const EMAIL_EXP = /^[^\s()<>@,;:\/]+@\w[\w\.-]+\.[a-z]{2,}$/i, STRING_EXP = /[a-zA-Z!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]+/, INT_EXP = /^[-+]?\d+$/; function validateField({ field: e, onValid: i, onInValid: a }) { e.change(function () { validateItem(e), fieldIsValid ? i() : a() }) } function validateForm({ form: e, onValid: i, onInValid: a, onBlur: s = !0, preventDefault: l = !0 }) { e.submit(function (s) { formIsValid = !0, e.find(".validate-me").each(function () { validateItem($(this)) }), formIsValid ? i() : a(), l && s.preventDefault() }), s && e.find(".validate-me").blur(function () { validateItem($(this)) }) } function validateItem(e) { fieldIsValid = !0; var i = e.attr("data-rule"), a = e.attr("data-msg"); if (void 0 !== i) { var s = 1, l = i.split("|"), n = 0; if (void 0 !== a) { var t = a.split("|"); inValidMessege = a[n] } for (; n < l.length;) { var d = l[n]; inValidMessege = "", void 0 !== a && (inValidMessege = t[n]); var r = d.indexOf(":", 0); if (r >= 0) { var f = d.substr(r + 1, d.length); s = validate(e, i = d.substr(0, r), f) } else s = validate(e, i = d.substr(r + 1, d.length), 0); if (0 == s) { !0, fieldIsValid = formIsValid = !1; break } 1 == s && !1, n++ } 0 == s && (e.addClass("is-invalid"), e.removeClass("is-valid"), e.siblings(".invalid-feedback").text(inValidMessege), e.focus()), 1 == s && (e.addClass("is-valid"), e.removeClass("is-invalid"), e.siblings(".valid-feedback").text("Looks Good!")) } } function validate(e, i, a) { switch (i) { case "required": if ("" === e.val()) return inValidMessege = "" == inValidMessege ? "Please fill in this field" : inValidMessege, 0; break; case "min": if ("" === e.val()) return 2; if (e.val().length < parseInt(a)) return inValidMessege = "" == inValidMessege ? "Min length is " + a : inValidMessege, 0; break; case "max": if ("" === e.val()) return 2; if (e.val().length > parseInt(a)) return inValidMessege = "" == inValidMessege ? "Max length is " + a : inValidMessege, 0; break; case "email": if ("" === e.val()) return 2; if (!EMAIL_EXP.test(e.val())) return inValidMessege = "" == inValidMessege ? "Invalid email" : inValidMessege, 0; break; case "integer": if ("" === e.val()) return 2; if (!INT_EXP.test(e.val())) return inValidMessege = "" == inValidMessege ? "Invalid Input" : inValidMessege, 0; break; case "select": if ("-1" === e.val()) return inValidMessege = "" == inValidMessege ? "Select Something" : inValidMessege, 0; break; case "mimes": if ("" === e.val()) return 2; for (var s = a.split(","), l = 0, n = e[0].files[0].type; l < s.length;) { if (n === "image/" + s[l]) return 1; l++ } return inValidMessege = "" == inValidMessege ? "file format not supported" : inValidMessege, 0; case "maxsize": if ("" === e.val()) return 2; if (e[0].files[0].size / 1024 > parseInt(a)) return inValidMessege = "" == inValidMessege ? "Max file size is " + a + "KB" : inValidMessege, 0 }return 1 } $(".validate-me").on("keyup", function () { $(this).removeClass("is-invalid is-valid") }), $(".validate-me").on("change", function () { $(this).removeClass("is-invalid is-valid") });